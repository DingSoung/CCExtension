// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"

SWIFT_CLASS("_TtC5CCKit9CCNetwork")
@interface CCNetwork : NSObject
@end

@class NSDictionary;
@class NSData;
@class NSError;

@interface CCNetwork (SWIFT_EXTENSION(CCKit))
+ (void)POST:(NSString * _Nonnull)url parameter:(NSDictionary * _Nonnull)parameter success:(void (^ _Nonnull)(NSData * _Nonnull))success fail:(void (^ _Nonnull)(NSError * _Nonnull))fail;
+ (void)GET:(NSString * _Nonnull)url parameter:(NSDictionary * _Nonnull)parameter success:(void (^ _Nonnull)(NSData * _Nonnull))success fail:(void (^ _Nonnull)(NSError * _Nonnull))fail;
@end


@interface NSAttributedString (SWIFT_EXTENSION(CCKit))
@end


@interface NSData (SWIFT_EXTENSION(CCKit))

/// json data to jsonObject (Array or Dictionary)
@property (nonatomic, readonly, strong) id _Nullable jsonObject;
@property (nonatomic, readonly, copy) NSString * _Nonnull hexString;
@property (nonatomic, readonly) uint16_t checksum;
- (NSString * _Nonnull)toHexString;
@end

@class NSString;

@interface NSDictionary (SWIFT_EXTENSION(CCKit))

/// dictionary to string
@property (nonatomic, readonly, strong) NSString * _Nonnull jsonStr;
@end


@interface NSMutableData (SWIFT_EXTENSION(CCKit))
@end


@interface NSObject (SWIFT_EXTENSION(CCKit))
- (void)closure:(void (^ _Nonnull)(void))block;
@end


@interface NSString (SWIFT_EXTENSION(CCKit))

/// string to dictionary
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull jsonDict;
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull urlToDict;
@property (nonatomic, readonly) NSInteger lenghtOfZhEn;
@end


@interface UIColor (SWIFT_EXTENSION(CCKit))
@end


@interface UIColor (SWIFT_EXTENSION(CCKit))

/// The shorthand three-digit hexadecimal representation of color. #RGB defines to the color #RRGGBB.
///
/// \param hex3 Three-digit hexadecimal value.
///
/// \param alpha 0.0 - 1.0. The default is 1.0.
- (nonnull instancetype)initWithHex3:(uint16_t)hex3 alpha:(CGFloat)alpha;

/// The shorthand four-digit hexadecimal representation of color with alpha. #RGBA defines to the color #RRGGBBAA.
///
/// \param hex4 Four-digit hexadecimal value.
- (nonnull instancetype)initWithHex4:(uint16_t)hex4;

/// The six-digit hexadecimal representation of color of the form #RRGGBB.
///
/// \param hex6 Six-digit hexadecimal value.
- (nonnull instancetype)initWithHex6:(uint32_t)hex6 alpha:(CGFloat)alpha;

/// The six-digit hexadecimal representation of color with alpha of the form #RRGGBBAA.
///
/// \param hex8 Eight-digit hexadecimal value.
- (nonnull instancetype)initWithHex8:(uint32_t)hex8;

/// The rgba string representation of color with alpha of the form #RRGGBBAA/#RRGGBB, throws error.
///
/// \param rgba String value.
- (nullable instancetype)initWithRgba_throws:(NSString * _Nonnull)rgba error:(NSError * _Nullable * _Null_unspecified)error;

/// The rgba string representation of color with alpha of the form #RRGGBBAA/#RRGGBB, fails to default color.
///
/// \param rgba String value.
- (nonnull instancetype)initWithRgba:(NSString * _Nonnull)rgba defaultColor:(UIColor * _Nonnull)defaultColor;

/// Hex string of a UIColor instance.
///
/// \param rgba Whether the alpha should be included.
- (NSString * _Nonnull)hexString:(BOOL)includeAlpha;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end


@interface UIImageView (SWIFT_EXTENSION(CCKit))
- (void)setImageScaled:(NSString * _Null_unspecified)imageNamed ratio:(CGFloat)ratio;
- (void)setImageScaled:(NSString * _Null_unspecified)imageNamed size:(CGSize)size;
@end

@class UIViewController;
@class UIPanGestureRecognizer;

@interface UIView (SWIFT_EXTENSION(CCKit))
@property (nonatomic, readonly, strong) UIViewController * _Nullable superViewController;
- (void)setShadowOC:(CGColorRef _Nonnull)color offset:(CGSize)offset opacity:(float)opacity radius:(CGFloat)radius;
- (void)viewInFullScreen;
- (void)fullViewTapGesture:(UIPanGestureRecognizer * _Nonnull)sender;
@end

@class JSValue;

@interface UIWebView (SWIFT_EXTENSION(CCKit))

/// add native target for js function
///
/// \param function js func name
///
/// \param block native block target
- (void)addJsTarget:(NSString * _Nonnull)function block:(void (^ _Nonnull)(id _Nonnull))block;

/// call js function
///
/// \param function js func name
///
/// \param parameter parameter array for function, optional
- (void)runJsFunction:(NSString * _Nonnull)function parameter:(NSArray * _Nonnull)parameter;
- (void)syncRunJsFunction:(NSString * _Nonnull)function parameter:(NSArray * _Nonnull)parameter complete:(void (^ _Nullable)(JSValue * _Nonnull))complete;
@end

#pragma clang diagnostic pop
